.TH RSRCE "1" "2004-03-26" "Debian Project" "Debian GNU/Linux"

.SH NAME

rsrce \- editor for raw MacOS resource forks

.SH SYNOPSIS

.B rsrce
.RB [ \-e ]
.RB [ "\-f \fIscript" ]
.RB [ "\-o \fIoutput\-file" ]
.RI [ input\-file ]

.SH DESCRIPTION

Rsrce is a command driven Macintosh
resource fork editor for Unix-like
operating systems.
It works with raw resource forks
stored in Unix files,
such as the .rsrc files produced by the
.B macutil
package.

Rsrce doesn't allow you to edit the
resource data directly.
It only knows to import/export them
from/to files, performing conversion for
the few resource types it knows.

.SH OPTIONS

.TP
.B \-e
When this option is given, the failure of an editor command will cause rsrce to
quit immediately with a non-zero exit status. This is similar to the
.BR \-e " option to " /bin/sh .

.TP
.BI "\-f " script
Instructs
.B rsrce
to read its commands from the given
.IR script ,
instead of using the standard input.

.TP
.BI "\-o " output\-file
Specifies a default output file for the
.BR write command.
Useful when calling
.B rsrce
scripts which save their changes with a
.B write
command without a filename.

.PP
If an
.I input\-file
is specified,
it is loaded before rsrce starts reading commands,
and is used as the default output
file if the
.B \-o
option has not been given.

.SH USAGE

Rsrce reads commands from the standard input.
Unquoted whitespace is ignored,
except for the purpose of separating arguments.
Empty lines are ignored, and a
.B #
at a position where an argument would have started
indicates a comment which extends to the end of the line.
Text within single quotes is used as-is.
An unquoted backslash can be used
the way it works in C strings,
or to force literal interpretation
of the following character.

Resources are referred to by specifing
their type and id, separated by a colon.
I mean, something like "STR#:128".
If the given type has less than 4 letters,
spaces are added to complete it.

The following commands are available:

.TP
.BR "read " [\fIfile\fR]
read the resources from
.I file

.TP
.BR "write " [\fIfile\fR]
write the resources to
.I file

.TP
.BI "create " resource
create a new, empty resource with the given type and id

.TP
.BI "delete " resource
remove the specified
.I resource

.TP
.BI "rename " resource " " new-name
change the name associated with
.IR resource " to " new-name

.TP
.BI "chattr " resource " " attr-spec
change the attributes of
.I resource
according to
.I attr-spec

.TP
.B ls
list each resource's type, id, attributes, data lenght, and name

.TP
.BI "hexdump " resource
show an hexdump of
.IR resource 's
data

.TP
.BI import \fR| "export " resource " " file " \fR[" ext \fR]
import/export
.IR resource 's
data from/to
.I file.
The conversion which is performed
depends on the extension of the given filename.
This extenstion may be overriden by providing the
.IR ext argument.

.TP
.BI "edit " resource \fR[ ext \fR]
invoke an external editor to change
.IR resource 's
data

.TP
.B help
list available commands

.TP
.B exit
terminate rsrce
(without saving, use write before exit
if you wish to save your changes)

.SH CONVERSION OF RESOURCE DATA

When
.B rsrce
imports or exports resource data,
a conversion can be performed depending on the resource type
and the extension of the provided filename.

The following extensions are known to
.BR rsrce :
.TP
.B bin
causes no conversion,
the raw resource data is used
regardless of the resource type;
.TP
.B txt
causes the resource data to be converted to plain text.
This is possible for
.BR  STR ", " STR# and CMDL resources.

.SH BUGS

Rsrce has only been originally created
to change the configuration of the
miBoot Linux bootloader for OldWorld
PowerMac computers.
Since I do not use MacOS, I haven't
tested any other usage of this program.
You should therefore be very careful
when using it, as it could very well
produce unusable output.

Another consequence of this is wildly
missing functionnality.
I'm not going to work on it, since I
couldn't test anything in a real
situation.
Patches and/or usage reports would be
very welcome.

.SH AUTHOR

Jeremie Koenig <sprite@sprite.fr.eu.org>

.SH SEE ALSO

.BR hfsutils (1),
.BR macutil (1)

